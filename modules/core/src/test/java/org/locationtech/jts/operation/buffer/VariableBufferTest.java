/*
 * Copyright (c) 2019 Martin Davis.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * and Eclipse Distribution License v. 1.0 which accompanies this distribution.
 * The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html
 * and the Eclipse Distribution License is available at
 *
 * http://www.eclipse.org/org/documents/edl-v10.php.
 */
package org.locationtech.jts.operation.buffer;

import org.locationtech.jts.geom.Geometry;

import test.jts.GeometryTestCase;

public class VariableBufferTest extends GeometryTestCase {

  public VariableBufferTest(String name) {
    super(name);
  }

  public static void main(String[] args) {
    junit.textui.TestRunner.run(VariableBufferTest.class);
  }
  
  public void testZeroWidth() {
    checkBuffer("LINESTRING( 0 0, 6 6, 10 10)",
        0, 0,
        "POLYGON EMPTY");
  }

  public void testZeroLength() {
    checkBuffer("LINESTRING( 10 10, 10 10 )",
        0, 0,
        "POLYGON EMPTY");
  }

  public void testOneSegmentSameDist() {
    checkBuffer("LINESTRING (100 100, 200 100)",
        10, 10,
        "POLYGON ((100 110, 200 110, 202.07911690817758 109.78147600733806, 204.067366430758 109.13545457642601, 205.87785252292474 108.09016994374947, 207.43144825477395 106.69130606358858, 208.6602540378444 105, 209.51056516295154 103.09016994374947, 209.94521895368274 101.04528463267654, 209.94521895368274 98.95471536732347, 209.51056516295154 96.90983005625053, 208.6602540378444 95, 207.43144825477395 93.30869393641142, 205.87785252292474 91.90983005625053, 204.067366430758 90.86454542357399, 202.0791169081776 90.21852399266194, 200 90, 100 90, 97.9208830918224 90.21852399266194, 95.932633569242 90.86454542357399, 94.12214747707527 91.90983005625053, 92.56855174522606 93.30869393641142, 91.33974596215562 95, 90.48943483704846 96.90983005625053, 90.05478104631726 98.95471536732346, 90.05478104631726 101.04528463267653, 90.48943483704846 103.09016994374947, 91.3397459621556 105, 92.56855174522606 106.69130606358858, 94.12214747707527 108.09016994374947, 95.93263356924199 109.135454576426, 97.9208830918224 109.78147600733806, 100 110))");
  }

  public void testOneSegment() {
    checkBuffer("LINESTRING (100 100, 200 100)",
        10, 30,
        "POLYGON ((98 109.79795897113272, 194 129.39387691339815, 200.21392261363906 129.9992372755604, 206.41858016866334 129.30532082435613, 212.3452469097454 127.34218130905838, 217.73723695495747 124.1948429464564, 222.36102144557233 119.99961799411815, 226.01634275758852 114.93820302177177, 228.54488772515847 109.22980957323051, 229.83714423576606 103.12167004247614, 229.83714423576606 96.87832995752386, 228.54488772515847 90.77019042676949, 226.01634275758852 85.06179697822823, 222.3610214455723 80.00038200588185, 217.73723695495747 75.8051570535436, 212.3452469097454 72.65781869094162, 206.41858016866334 70.69467917564386, 200.21392261363903 70.00076272443958, 194 70.60612308660184, 98 90.20204102886728, 95.83494949014191 90.90866598070829, 93.88593025960138 92.08683683919371, 92.25403330758516 93.67544467966324, 91.02390125377438 95.59209218585428, 90.25933812664006 97.73736740302985, 90 100, 90.25933812664006 102.26263259697015, 91.02390125377438 104.40790781414572, 92.25403330758516 106.32455532033676, 93.88593025960137 107.91316316080629, 95.83494949014191 109.09133401929171, 98 109.79795897113272))"
        );
  }

  public void testSegments2() {
    checkBuffer("LINESTRING( 0 0, 40 40, 60 -20)",
        10, 20,
        "POLYGON ((-9.979237365401294 0.6440664600634328, -9.619037999031603 2.7338814848464272, -8.826263719989827 4.700751934019848, -7.636566145886759 6.456226258387811, 28.75793640390754 49.5044428085851, 29.38336210678183 50.097295475450274, 30.001218356789757 50.80475787103322, 30.602078678884112 51.252539602135684, 31.109863579301155 51.733878362315515, 31.803383537292305 52.1477932065089, 32.504417034558976 52.67022742528494, 33.24408294402805 53.007648591487076, 33.89259730418066 53.394702658564356, 34.6076864732198 53.629697934530995, 35.344697356774184 53.965907929677435, 36.20164377794805 54.15351014274409, 36.971289263804564 54.4064339194926, 37.665131741515786 54.473896078174725, 38.39432991718185 54.63353171949257, 39.33659661888634 54.6364122578712, 40.19674932235361 54.720044724945836, 40.83283055865636 54.64098629118802, 41.51617059194827 54.64307528275272, 42.50245896965561 54.43346844661459, 43.41267511813482 54.320337829056825, 43.96277694234288 54.123120441985215, 44.5698280074871 53.99410943869737, 45.551217668845545 53.553647453870724, 46.463226309681964 53.22668260260627, 46.90872642828229 52.944377735486476, 47.41797703939501 52.71581863834416, 48.34016408192386 52.03730319222676, 49.200576432847555 51.49207641392897, 49.53299925577343 51.15965359100309, 49.932534420002376 50.8656885191745, 50.738440877070275 49.95421196970625, 51.49207641392897 49.200576432847555, 51.71289032364328 48.85211406317617, 52.0004187331182 48.526920735533906, 52.63295583474085 47.4001756021219, 53.22668260260627 46.463226309681964, 53.346386788160835 46.12933338159549, 53.52863576494982 45.80469132164433, 78.37960104024995 -12.113919503248614, 79.65971918175255 -16.326385744987522, 79.98714825485874 -20.716871423825207, 79.34602139515712 -25.0726182764055, 77.76740692793993 -29.182551445921348, 75.32780283022437 -32.8475079450361, 72.14542972020045 -35.88988788228764, 68.37450201189156 -38.16226076381528, 64.19775484877592 -39.554509818187164, 59.81758895321222 -39.999168137950385, 55.44626250284216 -39.4746880541635, 51.29560532520087 -38.00648531350103, 47.56675384971761 -35.66570745821867, 44.440404250408136 -32.56578609197541, 42.06805610159047 -28.85694010504155, 40.56467086974921 -24.718896226748868, 31.314401806419635 13.379424895487343, 6.456226258387812 -7.636566145886759, 4.700751934019851 -8.826263719989825, 2.7338814848464295 -9.619037999031603, 0.6440664600634369 -9.979237365401293, -1.4747126869888518 -9.890663399936027, -3.527172965994791 -9.357299336237755, -5.4210137928374085 -8.403130931853113, -7.071067811865475 -7.0710678118654755, -8.40313093185311 -5.421013792837414, -9.357299336237753 -3.527172965994793, -9.890663399936027 -1.4747126869888536, -9.979237365401294 0.6440664600634328))");
  }

  private void checkBuffer(String wkt, double startDist, double endDist, 
      String wktExpected) {
    Geometry geom = read(wkt);
    Geometry result = VariableBuffer.buffer(geom, startDist, endDist);
    //System.out.println(result);
    checkBuffer(result, wktExpected);
  }

  private void checkBuffer(Geometry actual, String wktExpected) {
    Geometry expected = read(wktExpected);
    checkEqual(expected, actual);
  }
}
